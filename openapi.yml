openapi: "3.0.3"
info:
  title: Spending Diary API Definition
  description: A spending diary, is API to record of your daily money transactions.
  termsOfService: https://spendingjournal.com./terms/
  contact:
    name: API Support
    url: https://spendingjournal.com/support/
    email: support@spendingjournal.com
  license:
    name: MIT license
    url: https://spendingjournal.com/license/
  version: 0.0.3
servers:
  - description: API server
    url: https://api.spendingjournal.com/v1

# path definitions and examples
paths: {}

components:
  schemas:
    # Objeto raiz
    SpendingDiary:
      type: object
      description: "A record of spending, including wages, income, and various types of expenses for a specific month."
      required:
        - month
        - monthlyWage
        - monthlyIncome
        - roundUpAdjustment
        - roundDownAdjustment
        - fixedExpenses
        - genericExpenses
      properties:
        month:
          type: string
          description: "Year and month in the format YYYY-MM"
          pattern: "^\\d{4}-(0[1-9]|1[0-2])$"
          example: "2024-10"
        monthlyWage:
          $ref: "#/components/schemas/Value"
        monthlyIncome:
          $ref: "#/components/schemas/Value"
        roundUpAdjustment:
          $ref: "#/components/schemas/Value"
        roundDownAdjustment:
          $ref: "#/components/schemas/Value"

        fixedExpenses:
          $ref: "#/components/schemas/FixedExpenses"
        genericExpenses:
          $ref: "#/components/schemas/GenericExpenses"
        creditExpenses:
          $ref: "#/components/schemas/CardsExpenses"

    # Despesas Fixas
    FixedExpenses:
      type: object
      description: "List of fixed expenses that remain constant every month."
      required:
        - title
        - total
        - expenses
      properties:
        title:
          type: string
          example: "Fixed Expenses"
        total:
          $ref: "#/components/schemas/Value"
        expenses:
          type: array
          items:
            $ref: "#/components/schemas/ExpenseSimple"

    # Despesas Genéricas
    GenericExpenses:
      type: object
      description: "List of generic expenses that may vary month to month."
      required:
        - title
        - total
        - expenses
      properties:
        title:
          type: string
          example: "Generic Expenses"
        total:
          $ref: "#/components/schemas/Value"
        expenses:
          type: array
          items:
            $ref: "#/components/schemas/ExpenseSimple"

    # Despesas com Cartão de Crédito
    CardsExpenses:
      type: object
      description: "Expenses related to credit card transactions, including details on outstanding debts."
      required:
        - title
        - total
        - expenses
      properties:
        title:
          type: string
          example: "Credit Expenses"
        total:
          $ref: "#/components/schemas/Value"
        expenses:
          type: array
          items:
            $ref: "#/components/schemas/Expense"

    # Tipo Base de Despesas
    Expense:
      type: object
      description: "Base type for expense entries, which can be either simple or detailed."
      discriminator:
        propertyName: "expenseType"
        mapping:
          "simple": "#/components/schemas/ExpenseSimple"
          "detailed": "#/components/schemas/ExpenseDetailed"
      oneOf:
        - $ref: "#/components/schemas/ExpenseSimple"
        - $ref: "#/components/schemas/ExpenseDetailed"

    # Despesa Simples
    ExpenseSimple:
      type: object
      description: "Represents a simple expense entry."
      required:
        - expenseType
        - expense
      properties:
        expenseType:
          type: string
          example: "simple"
        expense:
          $ref: "#/components/schemas/NamedValue"

    # Despesa Detalhada
    ExpenseDetailed:
      type: object
      description: "Represents a detailed expense entry."
      required:
        - expenseType
        - title
        - nextInvoice
        - interestRefunds
        - prepayments
        - limitTotal
        - limitAvailable
      properties:
        expenseType:
          type: string
          example: "detailed"
        title:
          type: string
          example: "Credit detailed expense"
        expensesInNextInvoice:
          type: array
          items:
            $ref: "#/components/schemas/ExpenseSimple"
        nextInvoice:
          $ref: "#/components/schemas/Value"
        interestRefunds:
          $ref: "#/components/schemas/Value"
        prepayments:
          $ref: "#/components/schemas/Value"
        limitTotal:
          $ref: "#/components/schemas/Value"
        limitAvailable:
          $ref: "#/components/schemas/Value"

    # Valor Nomeado
    NamedValue:
      type: object
      description: "Represents float number with a name"
      required:
        - name
        - value
      properties:
        name:
          type: string
          example: "Salary"
        value:
          $ref: "#/components/schemas/Value"

    # Tipo Base de Valor
    Value:
      type: number
      description: "Represents float number"
      format: float
      multipleOf: 0.01
      example:
        - "-50.00"
        - "50.00"
