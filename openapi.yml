openapi: "3.0.3"
info:
  title: Spending Diary API Definition
  description: A spending diary, is API to record of your daily money transactions.
  termsOfService: https://spendingjournal.com./terms/
  contact:
    name: API Support
    url: https://spendingjournal.com/support/
    email: support@spendingjournal.com
  license:
    name: MIT license
    url: https://spendingjournal.com/license/
  version: 0.0.1
servers:
  - description: API server
    url: https://api.spendingjournal.com/v1

# path definitions and examples
paths: {}

components:
  schemas:
    SpendingDiary:
      type: object
      properties:
        month:
          type: string
          example: "October 2024"
        wage:
          example: "Part time job R$950,00"
          allOf:
            - $ref: "#/components/schemas/NamedValue"
        fixed Expenses:
          $ref: "#/components/schemas/FixedExpenses"
        genericExpenses:
          $ref: "#/components/schemas/GenericExpenses"
        creditExpenses:
          $ref: "#/components/schemas/CreditExpenses"
        accountBalance:
          allOf:
            - $ref: "#/components/schemas/NamedValue"
        positiveCorrectionBalance:
          example: "Round up"
          allOf:
            - $ref: "#/components/schemas/NamedValue"
        negativeCorrectionBalance:
          example: "Round down"
          allOf:
            - $ref: "#/components/schemas/NamedValue"

    FixedExpenses:
      type: object
      properties:
        title:
          example: "Fixed Expenses"
          type: string
        total:
          allOf:
            - $ref: "#/components/schemas/Value"
    GenericExpenses:
      type: object
      properties:
        title:
          example: "Generic Expenses"
          type: string
        total:
          allOf:
            - $ref: "#/components/schemas/Value"
        expenses:
          type: array
          items:
            $ref: "#/components/schemas/Expense"
    CreditExpenses:
      type: object
      properties:
        cardName:
          example: "Credit Expenses"
          type: string
        total:
          allOf:
            - $ref: "#/components/schemas/Value"
        expenses:
          type: array
          items:
            $ref: "#/components/schemas/Expense"

    CreditExpensesDetailed:
      type: object
      properties:
        cardName:
          example: "Bradesco Platinum"
          type: string
        limitTotal:
          allOf:
            - $ref: "#/components/schemas/Value"
        limitAvailable:
          allOf:
            - $ref: "#/components/schemas/Value"
        nextInvoice:
          allOf:
            - $ref: "#/components/schemas/Value"
        detailedExpenses:
          type: array
          items:
            $ref: "#/components/schemas/Expense"
        interestRefunds:
          allOf:
            - $ref: "#/components/schemas/Value"
        prepayments:
          allOf:
            - $ref: "#/components/schemas/Value"

    # Base type to expenses structs.
    Expense:
      example: "Expense XYZ: R$130,00"
      allOf:
        - $ref: "#/components/schemas/NamedValue"
    # Add a name to the value
    NamedValue:
      allOf:
        - $ref: "#/components/schemas/Value"
      properties:
        name:
          example: "Salary"
          type: string
    # Carry a value
    Value:
      type: object
      properties:
        value:
          example: 50.00
          type: number
          format: float
